// Code generated by protoc-gen-go. DO NOT EDIT.
// source: todo.proto

package todoList

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TodoListResponse struct {
	Todo                 []*Todo  `protobuf:"bytes,1,rep,name=todo,proto3" json:"todo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TodoListResponse) Reset()         { *m = TodoListResponse{} }
func (m *TodoListResponse) String() string { return proto.CompactTextString(m) }
func (*TodoListResponse) ProtoMessage()    {}
func (*TodoListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e4b95d0c4e09639, []int{0}
}

func (m *TodoListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TodoListResponse.Unmarshal(m, b)
}
func (m *TodoListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TodoListResponse.Marshal(b, m, deterministic)
}
func (m *TodoListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TodoListResponse.Merge(m, src)
}
func (m *TodoListResponse) XXX_Size() int {
	return xxx_messageInfo_TodoListResponse.Size(m)
}
func (m *TodoListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TodoListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TodoListResponse proto.InternalMessageInfo

func (m *TodoListResponse) GetTodo() []*Todo {
	if m != nil {
		return m.Todo
	}
	return nil
}

type Todo struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Detail               string   `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Todo) Reset()         { *m = Todo{} }
func (m *Todo) String() string { return proto.CompactTextString(m) }
func (*Todo) ProtoMessage()    {}
func (*Todo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e4b95d0c4e09639, []int{1}
}

func (m *Todo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Todo.Unmarshal(m, b)
}
func (m *Todo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Todo.Marshal(b, m, deterministic)
}
func (m *Todo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Todo.Merge(m, src)
}
func (m *Todo) XXX_Size() int {
	return xxx_messageInfo_Todo.Size(m)
}
func (m *Todo) XXX_DiscardUnknown() {
	xxx_messageInfo_Todo.DiscardUnknown(m)
}

var xxx_messageInfo_Todo proto.InternalMessageInfo

func (m *Todo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Todo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Todo) GetDetail() string {
	if m != nil {
		return m.Detail
	}
	return ""
}

type GetTodoRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTodoRequest) Reset()         { *m = GetTodoRequest{} }
func (m *GetTodoRequest) String() string { return proto.CompactTextString(m) }
func (*GetTodoRequest) ProtoMessage()    {}
func (*GetTodoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e4b95d0c4e09639, []int{2}
}

func (m *GetTodoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTodoRequest.Unmarshal(m, b)
}
func (m *GetTodoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTodoRequest.Marshal(b, m, deterministic)
}
func (m *GetTodoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTodoRequest.Merge(m, src)
}
func (m *GetTodoRequest) XXX_Size() int {
	return xxx_messageInfo_GetTodoRequest.Size(m)
}
func (m *GetTodoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTodoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTodoRequest proto.InternalMessageInfo

func (m *GetTodoRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type AddTodoRequest struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Detail               string   `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTodoRequest) Reset()         { *m = AddTodoRequest{} }
func (m *AddTodoRequest) String() string { return proto.CompactTextString(m) }
func (*AddTodoRequest) ProtoMessage()    {}
func (*AddTodoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e4b95d0c4e09639, []int{3}
}

func (m *AddTodoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTodoRequest.Unmarshal(m, b)
}
func (m *AddTodoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTodoRequest.Marshal(b, m, deterministic)
}
func (m *AddTodoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTodoRequest.Merge(m, src)
}
func (m *AddTodoRequest) XXX_Size() int {
	return xxx_messageInfo_AddTodoRequest.Size(m)
}
func (m *AddTodoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTodoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddTodoRequest proto.InternalMessageInfo

func (m *AddTodoRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AddTodoRequest) GetDetail() string {
	if m != nil {
		return m.Detail
	}
	return ""
}

func init() {
	proto.RegisterType((*TodoListResponse)(nil), "todoList.TodoListResponse")
	proto.RegisterType((*Todo)(nil), "todoList.Todo")
	proto.RegisterType((*GetTodoRequest)(nil), "todoList.GetTodoRequest")
	proto.RegisterType((*AddTodoRequest)(nil), "todoList.AddTodoRequest")
}

func init() { proto.RegisterFile("todo.proto", fileDescriptor_0e4b95d0c4e09639) }

var fileDescriptor_0e4b95d0c4e09639 = []byte{
	// 258 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x50, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x65, 0xd3, 0x5a, 0x75, 0x0a, 0x51, 0x06, 0x29, 0x4b, 0xbc, 0x84, 0x3d, 0xf5, 0xb4, 0x85,
	0x16, 0x3c, 0x0a, 0x05, 0xc5, 0x8b, 0xa7, 0xe8, 0x1f, 0xb0, 0xee, 0x58, 0x16, 0xa2, 0x1b, 0x9b,
	0x89, 0xe0, 0x9f, 0xf3, 0xb7, 0xc9, 0x6e, 0x36, 0x9a, 0x84, 0xde, 0x32, 0x2f, 0xef, 0x63, 0xdf,
	0x03, 0x60, 0x67, 0x9c, 0xae, 0x0e, 0x8e, 0x1d, 0x9e, 0xf9, 0xef, 0x47, 0x5b, 0x73, 0x76, 0xbd,
	0x77, 0x6e, 0x5f, 0xd2, 0x2a, 0xe0, 0xbb, 0xe6, 0x6d, 0x75, 0xff, 0x5e, 0xf1, 0x77, 0x4b, 0x53,
	0x37, 0x70, 0xf9, 0x1c, 0x89, 0x05, 0xd5, 0x95, 0xfb, 0xa8, 0x09, 0x15, 0x4c, 0xbd, 0x58, 0x8a,
	0x7c, 0xb2, 0x9c, 0xaf, 0x53, 0xdd, 0x39, 0x69, 0xcf, 0x2c, 0xc2, 0x3f, 0x75, 0x07, 0x53, 0x7f,
	0x61, 0x0a, 0x89, 0x35, 0x52, 0xe4, 0x62, 0x79, 0x5e, 0x24, 0xd6, 0xe0, 0x15, 0x9c, 0xb0, 0xe5,
	0x92, 0x64, 0x12, 0xa0, 0xf6, 0xc0, 0x05, 0xcc, 0x0c, 0xf1, 0x8b, 0x2d, 0xe5, 0x24, 0xc0, 0xf1,
	0x52, 0x39, 0xa4, 0x0f, 0xc4, 0xc1, 0x96, 0x3e, 0x1b, 0xaa, 0x79, 0xec, 0xa7, 0x6e, 0x21, 0xdd,
	0x1a, 0xd3, 0x67, 0xfc, 0x25, 0x88, 0xe3, 0x09, 0x49, 0x3f, 0x61, 0xfd, 0x23, 0xe0, 0xa2, 0x2b,
	0xf8, 0x44, 0x87, 0x2f, 0xfb, 0x4a, 0xb8, 0x85, 0x79, 0x4c, 0xf5, 0x28, 0x2e, 0x74, 0x3b, 0x90,
	0xee, 0x06, 0xd2, 0x61, 0xa0, 0x2c, 0x1b, 0x16, 0x1f, 0x4c, 0xb4, 0x81, 0xd3, 0x68, 0x81, 0xf2,
	0x9f, 0x36, 0xec, 0x92, 0x8d, 0x96, 0xf3, 0xa2, 0xd8, 0xa5, 0x2f, 0x1a, 0xd6, 0x1b, 0x8b, 0x76,
	0xb3, 0xf0, 0xaa, 0xcd, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x3b, 0xa3, 0x8d, 0xc8, 0xdc, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TodoListServiceClient is the client API for TodoListService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TodoListServiceClient interface {
	GetTodoList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*TodoListResponse, error)
	GetTodo(ctx context.Context, in *GetTodoRequest, opts ...grpc.CallOption) (*Todo, error)
	AddTodo(ctx context.Context, in *AddTodoRequest, opts ...grpc.CallOption) (*Todo, error)
}

type todoListServiceClient struct {
	cc *grpc.ClientConn
}

func NewTodoListServiceClient(cc *grpc.ClientConn) TodoListServiceClient {
	return &todoListServiceClient{cc}
}

func (c *todoListServiceClient) GetTodoList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*TodoListResponse, error) {
	out := new(TodoListResponse)
	err := c.cc.Invoke(ctx, "/todoList.TodoListService/GetTodoList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoListServiceClient) GetTodo(ctx context.Context, in *GetTodoRequest, opts ...grpc.CallOption) (*Todo, error) {
	out := new(Todo)
	err := c.cc.Invoke(ctx, "/todoList.TodoListService/GetTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoListServiceClient) AddTodo(ctx context.Context, in *AddTodoRequest, opts ...grpc.CallOption) (*Todo, error) {
	out := new(Todo)
	err := c.cc.Invoke(ctx, "/todoList.TodoListService/AddTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TodoListServiceServer is the server API for TodoListService service.
type TodoListServiceServer interface {
	GetTodoList(context.Context, *empty.Empty) (*TodoListResponse, error)
	GetTodo(context.Context, *GetTodoRequest) (*Todo, error)
	AddTodo(context.Context, *AddTodoRequest) (*Todo, error)
}

func RegisterTodoListServiceServer(s *grpc.Server, srv TodoListServiceServer) {
	s.RegisterService(&_TodoListService_serviceDesc, srv)
}

func _TodoListService_GetTodoList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoListServiceServer).GetTodoList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/todoList.TodoListService/GetTodoList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoListServiceServer).GetTodoList(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoListService_GetTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTodoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoListServiceServer).GetTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/todoList.TodoListService/GetTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoListServiceServer).GetTodo(ctx, req.(*GetTodoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoListService_AddTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddTodoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoListServiceServer).AddTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/todoList.TodoListService/AddTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoListServiceServer).AddTodo(ctx, req.(*AddTodoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TodoListService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "todoList.TodoListService",
	HandlerType: (*TodoListServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTodoList",
			Handler:    _TodoListService_GetTodoList_Handler,
		},
		{
			MethodName: "GetTodo",
			Handler:    _TodoListService_GetTodo_Handler,
		},
		{
			MethodName: "AddTodo",
			Handler:    _TodoListService_AddTodo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "todo.proto",
}
